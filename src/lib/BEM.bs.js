// Generated by BUCKLESCRIPT VERSION 5.0.0-dev.6, PLEASE EDIT WITH CARE

var $$Array = require("bs-platform/lib/js/array.js");
var Block = require("bs-platform/lib/js/block.js");
var Belt_List = require("bs-platform/lib/js/belt_List.js");
var Belt_Option = require("bs-platform/lib/js/belt_Option.js");
var Caml_exceptions = require("bs-platform/lib/js/caml_exceptions.js");

var whitespaceRegex = new RegExp("\\s+");

function Block$1(BlockDef) {
  var block = BlockDef[/* block */0];
  var el = function (element) {
    return block + ("__" + element);
  };
  var addClass = function (base, extraClass) {
    return base + (" " + extraClass);
  };
  var UnableToModifyBlankClassName = Caml_exceptions.create("BEM.Block(BlockDef).UnableToModifyBlankClassName");
  var modif = function (existing, modifier, cond) {
    if (cond) {
      var classNames = $$Array.to_list(existing.split(whitespaceRegex));
      var match;
      if (classNames) {
        var match$1 = classNames[0];
        if (match$1 !== undefined) {
          match = /* tuple */[
            match$1,
            Block.spliceObjApply(" ", "concat", [Belt_List.toArray(Belt_List.map(classNames[1], (function (x) {
                              return Belt_Option.getWithDefault(x, "");
                            })))])
          ];
        } else {
          throw UnableToModifyBlankClassName;
        }
      } else {
        throw UnableToModifyBlankClassName;
      }
      var rest = match[1];
      var root = match[0];
      var match$2 = rest === "";
      var prefix = match$2 ? root : "" + (String(root) + (" " + (String(rest) + "")));
      return "" + (String(prefix) + (" " + (String(root) + ("--" + (String(modifier) + "")))));
    } else {
      return existing;
    }
  };
  return /* module */[
          /* block */block,
          /* el */el,
          /* addClass */addClass,
          /* UnableToModifyBlankClassName */UnableToModifyBlankClassName,
          /* modif */modif
        ];
}

exports.whitespaceRegex = whitespaceRegex;
exports.Block = Block$1;
/* whitespaceRegex Not a pure module */
